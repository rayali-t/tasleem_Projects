/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Organization.OrganizationDirectory;
import Business.Requirement.Requirement;
import Business.Requirement.Requirement.Category;
import Business.Requirement.RequirementDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eshanee Thakur
 */
public class ManageDonationJPanel extends javax.swing.JPanel {

    private RequirementDirectory requirementList;
    private JPanel userProcessContainer;

    /**
     * Creates new form DonationReqJPanel
     */
    public ManageDonationJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory, RequirementDirectory requirementList) {
        initComponents();
        this.requirementList = requirementList;
        this.userProcessContainer = userProcessContainer;

        drpdwnCategory.removeAllItems();
        drpdwnCategory.addItem("Select Option");
        for (Category category : Category.values()) {
            drpdwnCategory.addItem(category.getValue());
        }

        populateRequirementTable();

        btnDelete.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnSave.setEnabled(false);
        btnAdd.setEnabled(true);
        populateDonationCounts();

    }

    private void resetSearchFields() {
        btnFilter.setEnabled(false);
        drpSearchArea.setEnabled(false);
        drpSearchCategory.setEnabled(false);
        txtSearchItem.setEnabled(false);
        drpSearchArea.setEditable(false);
        drpSearchCategory.setEditable(false);
        txtSearchItem.setEditable(false);
        txtSearchItem.setText("");
        drpSearchArea.setSelectedIndex(0);
        drpSearchCategory.setSelectedIndex(0);
        drpSearchCategory.removeAllItems();
        drpSearchCategory.addItem("Select Option");
        drpSearchArea.removeAllItems();
        drpSearchArea.addItem("Select Option");

        populateRequirementTable();
    }

    private void populateDonationCounts() {

        double countFood = 0, countMedicines = 0, countClothes = 0, countMoney = requirementList.getCashDonation();
        for (Requirement requirement : requirementList.getRequirementDirectory()) {

            if (requirement.getCategory().equals(Category.Food.getValue())) {
                countFood += requirement.getCollectedCount();
            }
            if (requirement.getCategory().equals(Category.Medicines.getValue())) {
                countMedicines += requirement.getCollectedCount();
            }
            if (requirement.getCategory().equals(Category.Clothes.getValue())) {
                countClothes += requirement.getCollectedCount();
            }
        }
        lblFunds.setText(countMoney + "");
        lblClothes.setText(countClothes + "");
        lblMeds.setText(countMedicines + "");
        lblFood.setText(countFood + "");
    }

    public void populateRequirementTable() {
        DefaultTableModel model = (DefaultTableModel) tblRequirements.getModel();

        model.setRowCount(0);
        for (Requirement item : requirementList.getRequirementDirectory()) {
            Object[] row = new Object[4];
            row[0] = item.getArea();
            row[1] = item.getCategory();
            row[2] = item;
            row[3] = item.getInitialRequirementCount();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequirements = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtArea = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtItem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCount = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        drpdwnCategory = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblFood = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblFunds = new javax.swing.JLabel();
        lblFood3 = new javax.swing.JLabel();
        lblMeds = new javax.swing.JLabel();
        lblClothes = new javax.swing.JLabel();
        btnClearSearch = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        drpSearchArea = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        drpSearchCategory = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtSearchItem = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();
        btnSearchCriteria = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblHeader.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(0, 153, 255));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("MANAGE DONATION REQUIREMENTS");

        tblRequirements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Area", "Category", "Item Name", "Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequirements);
        if (tblRequirements.getColumnModel().getColumnCount() > 0) {
            tblRequirements.getColumnModel().getColumn(0).setResizable(false);
            tblRequirements.getColumnModel().getColumn(2).setResizable(false);
            tblRequirements.getColumnModel().getColumn(3).setResizable(false);
        }

        btnAdd.setBackground(new java.awt.Color(0, 153, 255));
        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 153, 255));
        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel1.setBackground(null);
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Area:");

        txtArea.setBackground(null);
        txtArea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setBackground(null);
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Item:");

        txtItem.setBackground(null);
        txtItem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel3.setBackground(null);
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Count:");

        txtCount.setBackground(null);
        txtCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        backJButton.setBackground(new java.awt.Color(0, 153, 255));
        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel4.setBackground(null);
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Category:");

        drpdwnCategory.setBackground(null);
        drpdwnCategory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        drpdwnCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSave.setBackground(new java.awt.Color(0, 153, 255));
        btnSave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Update");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        jLabel5.setText("Medicines");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/food.png"))); // NOI18N
        jLabel6.setText("Food");

        lblFood.setBackground(new java.awt.Color(0, 153, 255));
        lblFood.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFood.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/money.jpg"))); // NOI18N
        jLabel7.setText("Funds");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clothes.png"))); // NOI18N
        jLabel8.setText("Clothes");

        lblFunds.setBackground(new java.awt.Color(0, 153, 255));
        lblFunds.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFunds.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFood3.setBackground(new java.awt.Color(0, 153, 255));
        lblFood3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFood3.setForeground(new java.awt.Color(255, 255, 255));
        lblFood3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblMeds.setBackground(new java.awt.Color(0, 153, 255));
        lblMeds.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMeds.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblClothes.setBackground(new java.awt.Color(0, 153, 255));
        lblClothes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblClothes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnClearSearch.setBackground(new java.awt.Color(0, 153, 255));
        btnClearSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClearSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnClearSearch.setText("Clear Search");
        btnClearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSearchActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Area: ");

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        drpSearchArea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        drpSearchArea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        drpSearchArea.setAutoscrolls(true);
        drpSearchArea.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Category: ");

        drpSearchCategory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        drpSearchCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        drpSearchCategory.setAutoscrolls(true);
        drpSearchCategory.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Item Name:");

        txtSearchItem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSearchItem.setEnabled(false);

        btnFilter.setBackground(new java.awt.Color(0, 153, 255));
        btnFilter.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnFilter.setForeground(new java.awt.Color(255, 255, 255));
        btnFilter.setText("Filter");
        btnFilter.setAutoscrolls(true);
        btnFilter.setEnabled(false);
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        btnSearchCriteria.setBackground(new java.awt.Color(0, 153, 255));
        btnSearchCriteria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSearchCriteria.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchCriteria.setText("Search");
        btnSearchCriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCriteriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 992, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txtItem)
                                                        .addComponent(drpdwnCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(190, 190, 190)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel11))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(drpSearchCategory, 0, 176, Short.MAX_VALUE)
                                                    .addComponent(txtSearchItem)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addComponent(drpSearchArea, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(85, 85, 85)
                                        .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblFood, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(297, 297, 297)
                                                .addComponent(jLabel7))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblMeds, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(76, 76, 76)
                                        .addComponent(jLabel8)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblClothes, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnClearSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSearchCriteria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(20, 20, 20)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 554, Short.MAX_VALUE)
                    .addComponent(lblFood3)
                    .addGap(0, 554, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(lblHeader))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFood, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMeds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFunds, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addComponent(lblClothes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(33, 33, 33)
                        .addComponent(btnSearchCriteria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClearSearch))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(drpSearchArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(drpSearchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(txtSearchItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addComponent(btnFilter)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(drpdwnCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAdd)
                                    .addComponent(btnSave))
                                .addGap(37, 37, 37)))
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jSeparator1)
                        .addContainerGap())))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 356, Short.MAX_VALUE)
                    .addComponent(lblFood3)
                    .addGap(0, 357, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {
//GEN-FIRST:event_btnAddActionPerformed
        if (drpdwnCategory.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select a category.");
            return;
        }
        if (!txtArea.getText().equals("") && !txtCount.getText().equals("") && !txtItem.getText().equals("")) {

            Requirement req = new Requirement();
            req.setArea(txtArea.getText());
            req.setItemName(txtItem.getText());

            req.setCategory(drpdwnCategory.getSelectedItem().toString());
            try {
                Integer.parseInt(txtCount.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please enter number format in count.");
                return;
            }
            req.setCategory(drpdwnCategory.getSelectedItem().toString());

            int itemCount = Integer.parseInt(txtCount.getText());
            if (itemCount >= 1) {
                req.setInitialRequirementCount(itemCount);
                req.setRequirementCount(Integer.parseInt(txtCount.getText()));

            } else {
                JOptionPane.showMessageDialog(null, "Please check the count.");
                return;
            }

//        int existingCount = 0;
//        for (Requirement r : requirementList.getRequirementDirectory()) {
//            if (r.getItemName().equalsIgnoreCase(txtItem.getText())) {
//                existingCount = existingCount + r.getRequirementCount();
//            }
//        }
//        //Eshanee check
//        req.setDonorTargetCount(itemCount + existingCount);
            //Adding area
            String area = txtArea.getText().toUpperCase();
            if (!requirementList.getAreaList().contains(area)) {
                requirementList.addAreaList(area);
            }

            //Adding a new requirement
            requirementList.createRequirement(req);

            populateRequirementTable();
            txtArea.setText("");
            txtItem.setText("");
            txtCount.setText("");
            drpdwnCategory.setSelectedIndex(0);
            resetSearchFields();
        } else {
            JOptionPane.showMessageDialog(null, "Please fill all the details.", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequirements.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Requirement req = (Requirement) tblRequirements.getValueAt(selectedRow, 2);
                String deletedArea = req.getArea().toUpperCase();
                requirementList.deleteRequirement(req);

                //Checking the area
                boolean flagExists = false;
                for (Requirement r : requirementList.getRequirementDirectory()) {
                    if (r.getArea().equalsIgnoreCase(deletedArea)) {
                        flagExists = true;
                        break;
                    }
                }
                if (!flagExists) {
                    requirementList.deleteArea(deletedArea);
                }

                populateRequirementTable();
                JOptionPane.showMessageDialog(null, "Requirement deleted successfully");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete!!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        int selectedrow = tblRequirements.getSelectedRow();
        if (selectedrow >= 0) {

            Requirement r = (Requirement) tblRequirements.getValueAt(selectedrow, 2);
            txtArea.setText(r.getArea() + "");
            txtItem.setText(r.getItemName() + "");
            txtCount.setText(Integer.toString(r.getInitialRequirementCount()) + "");
            drpdwnCategory.setSelectedItem(r.getCategory() + "");

            btnSave.setEnabled(true);
            btnAdd.setEnabled(false);
            btnDelete.setEnabled(true);
            btnUpdate.setEnabled(true);

        } else {
            JOptionPane.showMessageDialog(null, "Please select atleast one row.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (drpdwnCategory.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select a category.");
            return;
        }
        int selectedrow = tblRequirements.getSelectedRow();
        if (selectedrow >= 0) {
            Requirement req = (Requirement) tblRequirements.getValueAt(selectedrow, 2);
            if (!txtArea.getText().equals("") && !txtCount.getText().equals("") && !txtItem.getText().equals("")) {
                String previousArea = req.getArea().toUpperCase();
                try {
                    // req.setRequirementCount(Integer.parseInt(txtCount.getText()));
                    Integer.parseInt(txtCount.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Please enter number format in count.");
                    return;
                }
                if (Integer.parseInt(txtCount.getText()) < 1) {
                    JOptionPane.showMessageDialog(null, "Please check the count.");
                    return;
                }

                //Intermediate hack
                req.setArea("");

                //UpdateArea
                String area = txtArea.getText().toUpperCase();
                if (!previousArea.equals(area)) {
                    //Checking the area
                    boolean flagExists = false;

                    //Check for previous area - if doesnt exist, delete
                    for (Requirement r : requirementList.getRequirementDirectory()) {
                        if (r.getArea().equalsIgnoreCase(previousArea)) {
                            flagExists = true;
                            break;
                        }
                    }
                    if (!flagExists) {
                        requirementList.deleteArea(previousArea);
                    }

                    flagExists = false;
                    //Check for new area - if doesnt exist, add
                    for (Requirement r : requirementList.getRequirementDirectory()) {
                        if (r.getArea().equalsIgnoreCase(area)) {
                            flagExists = true;
                            break;
                        }
                    }
                    if (!flagExists) {
                        requirementList.addAreaList(area);
                    }

                }

                req.setInitialRequirementCount(Integer.parseInt(txtCount.getText()));
                req.setRequirementCount(Integer.parseInt(txtCount.getText()));
                req.setArea(txtArea.getText());
                req.setItemName(txtItem.getText());
                req.setCategory(drpdwnCategory.getSelectedItem().toString());

                populateRequirementTable();
                txtArea.setText("");
                txtItem.setText("");
                txtCount.setText("");
                drpdwnCategory.setSelectedIndex(0);
                btnSave.setEnabled(false);
                btnAdd.setEnabled(true);
                btnDelete.setEnabled(true);
                btnUpdate.setEnabled(true);
                JOptionPane.showMessageDialog(null, "Requirement updated successfully.");
                resetSearchFields();
            } else {
                JOptionPane.showMessageDialog(null, "Please fill in all the details.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select atleast one row.");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSearchCriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCriteriaActionPerformed

        btnFilter.setEnabled(true);
        drpSearchArea.setEnabled(true);
        drpSearchCategory.setEnabled(true);
        txtSearchItem.setEnabled(true);
        drpSearchArea.setEditable(true);
        drpSearchCategory.setEditable(true);
        txtSearchItem.setEditable(true);
        txtSearchItem.setText("");

        drpSearchCategory.removeAllItems();
        drpSearchCategory.addItem("Select Option");
        for (Category category : Category.values()) {
            drpSearchCategory.addItem(category.getValue());
        }

        drpSearchArea.removeAllItems();
        drpSearchArea.addItem("Select Option");
        for (String area : requirementList.getAreaList()) {
            drpSearchArea.addItem(area);
        }

        populateRequirementTable();
    }//GEN-LAST:event_btnSearchCriteriaActionPerformed

    private void btnClearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSearchActionPerformed
        resetSearchFields();
    }//GEN-LAST:event_btnClearSearchActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        if (drpSearchArea.getSelectedIndex() == 0 && drpSearchCategory.getSelectedIndex() == 0 && txtSearchItem.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter search criteria for searching.");
            return;
        }

        ArrayList<Requirement> filteredReq = new ArrayList<>();
        for (Requirement item : requirementList.getRequirementDirectory()) {
            filteredReq.add(item);
        }

        if (drpSearchArea.getSelectedIndex() > 0) {
            String selectedArea = drpSearchArea.getSelectedItem().toString();
            for (Requirement item : requirementList.getRequirementDirectory()) {
                if (!item.getArea().equalsIgnoreCase(selectedArea)) {
                    filteredReq.remove(item);
                }
            }
        }

        if (drpSearchCategory.getSelectedIndex() > 0) {
            String selectedCategory = drpSearchCategory.getSelectedItem().toString();
            for (Requirement item : requirementList.getRequirementDirectory()) {
                if (!item.getCategory().equalsIgnoreCase(selectedCategory)) {
                    filteredReq.remove(item);
                }
            }
        }

        if (!txtSearchItem.getText().isEmpty()) {
            String selectedItem = txtSearchItem.getText();
            for (Requirement item : requirementList.getRequirementDirectory()) {
                if (!item.getItemName().equalsIgnoreCase(selectedItem)) {
                    filteredReq.remove(item);
                }
            }
        }

        DefaultTableModel model = (DefaultTableModel) tblRequirements.getModel();
        model.setRowCount(0);
        for (Requirement item : filteredReq) {
            Object[] row = new Object[4];
            row[0] = item.getArea();
            row[1] = item.getCategory();
            row[2] = item;
            row[3] = item.getRequirementCount();
            model.addRow(row);
        }
    }//GEN-LAST:event_btnFilterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClearSearch;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearchCriteria;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> drpSearchArea;
    private javax.swing.JComboBox<String> drpSearchCategory;
    private javax.swing.JComboBox<String> drpdwnCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblClothes;
    private javax.swing.JLabel lblFood;
    private javax.swing.JLabel lblFood3;
    private javax.swing.JLabel lblFunds;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblMeds;
    private javax.swing.JTable tblRequirements;
    private javax.swing.JTextField txtArea;
    private javax.swing.JTextField txtCount;
    private javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtSearchItem;
    // End of variables declaration//GEN-END:variables
}
