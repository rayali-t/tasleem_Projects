/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DistributorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.GoodsManagement;
import Business.Organization.Organization;
import Business.Organization.TransportOrganization;
import Business.Requirement.Requirement;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CollectionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class DistributorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private GoodsManagement goodsManagement;
    private Network network;

    public DistributorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.network = business.getNetworkList().get(0);
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.goodsManagement = (GoodsManagement) organization;

        populateRequirementsList();
        populatePendingRequestTable();
        populatePackagesTable();
    }

    public void populateRequirementsList() {
        enterprise.getRequirementDirectory().setRequirementDirectory(new ArrayList<Requirement>());
        for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (ent.getEnterpriseType().getValue().equalsIgnoreCase(Enterprise.EnterpriseType.NGO.toString())) {
                for (Requirement req : ent.getRequirementDirectory().getRequirementDirectory()) {
                    Requirement newReq = req;
                    enterprise.getRequirementDirectory().createRequirement(newReq);
                }
                for (String area : ent.getRequirementDirectory().getAreaList()) {
                    enterprise.getRequirementDirectory().addAreaList(area);
                }
            }
        }
    }

    public void populatePendingRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblActionableRequests.getModel();
        model.setRowCount(0);

        for (WorkRequest request : goodsManagement.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getItemCount();
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();

            model.addRow(row);
        }
    }

    public void populatePackagesTable() {
        DefaultTableModel model = (DefaultTableModel) tblPackages.getModel();
        model.setRowCount(0);

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof TransportOrganization) {
                for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                    Object[] row = new Object[5];
                    row[0] = request.getArea();
                    row[1] = request;
                    row[2] = request.getItemCount();
                    row[3] = request.getSender().getEmployee().getName();
                    row[4] = request.getStatus();

                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPackages = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        btnAcknowledge = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblActionableRequests = new javax.swing.JTable();
        btnRefreshPackages = new javax.swing.JButton();
        btnCreatePackages = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPackages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Area", "Item Name", "Item Count", "Sender", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPackages);
        if (tblPackages.getColumnModel().getColumnCount() > 0) {
            tblPackages.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 560, 150));

        assignJButton.setBackground(new java.awt.Color(0, 153, 255));
        assignJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(255, 255, 255));
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 170, -1));

        btnAcknowledge.setBackground(new java.awt.Color(0, 153, 255));
        btnAcknowledge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAcknowledge.setForeground(new java.awt.Color(255, 255, 255));
        btnAcknowledge.setText("Acknowledge");
        btnAcknowledge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcknowledgeActionPerformed(evt);
            }
        });
        add(btnAcknowledge, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 230, 170, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("Incoming Requests:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 255));
        jLabel2.setText("Shipments:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, -1, -1));

        tblActionableRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Item Count", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblActionableRequests);
        if (tblActionableRequests.getColumnModel().getColumnCount() > 0) {
            tblActionableRequests.getColumnModel().getColumn(3).setResizable(false);
            tblActionableRequests.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 570, 150));

        btnRefreshPackages.setBackground(new java.awt.Color(0, 153, 255));
        btnRefreshPackages.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRefreshPackages.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshPackages.setText("Refresh");
        btnRefreshPackages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshPackagesActionPerformed(evt);
            }
        });
        add(btnRefreshPackages, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 390, 170, -1));

        btnCreatePackages.setBackground(new java.awt.Color(0, 153, 255));
        btnCreatePackages.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCreatePackages.setForeground(new java.awt.Color(255, 255, 255));
        btnCreatePackages.setText("Create Packages");
        btnCreatePackages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePackagesActionPerformed(evt);
            }
        });
        add(btnCreatePackages, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 430, 170, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DISTRIBUTOR DASHBOARD");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 20, 740, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = tblActionableRequests.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request.");
            return;
        }

        WorkRequest request = (WorkRequest) tblActionableRequests.getValueAt(selectedRow, 0);

        if (request.getStatus().equalsIgnoreCase("Completed")) {
            JOptionPane.showMessageDialog(null, "Selected request has already been completed. Please select another request.");
            return;
        }

        int selectionButton = JOptionPane.YES_NO_OPTION;
        if (request.getReceiver() != null) {
            int selectionResult = JOptionPane.showConfirmDialog(null, "This request is already assigned to someone else. Do you wish to override?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                request.setReceiver(userAccount);
                populatePendingRequestTable();
            }
        } else {
            request.setReceiver(userAccount);
            populatePendingRequestTable();
        }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void btnAcknowledgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcknowledgeActionPerformed
        int selectedRow = tblActionableRequests.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request.");
            return;
        }

        CollectionWorkRequest request = (CollectionWorkRequest) tblActionableRequests.getValueAt(selectedRow, 0);

        if (request.getStatus().equalsIgnoreCase("Completed")) {
            JOptionPane.showMessageDialog(null, "Selected request has already been completed. Please select another request.");
            return;
        }

        request.setCollectionAck("Received");
        request.setResolveDate(new Date());
        request.setStatus("Completed");
        populatePendingRequestTable();

    }//GEN-LAST:event_btnAcknowledgeActionPerformed

    private void btnRefreshPackagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshPackagesActionPerformed
        populatePackagesTable();
    }//GEN-LAST:event_btnRefreshPackagesActionPerformed

    private void btnCreatePackagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePackagesActionPerformed
        ShipmentWorkRequestJPanel processWorkRequestJPanel = new ShipmentWorkRequestJPanel(userProcessContainer, userAccount, enterprise);
        userProcessContainer.add("processVolunteerWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnCreatePackagesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnAcknowledge;
    private javax.swing.JButton btnCreatePackages;
    private javax.swing.JButton btnRefreshPackages;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblActionableRequests;
    private javax.swing.JTable tblPackages;
    // End of variables declaration//GEN-END:variables
}
