/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PharmacistRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Organization.HumanResource;
import Business.Organization.Organization;
import Business.Requirement.Requirement;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MedicineCollectionWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Eshanee Thakur
 */
public class RequestMedicineCollectionJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EnterpriseDirectory directory;
    private Requirement requirement;
    private String areaName;

    /**
     * Creates new form RequestCollectMedicineJPanel
     */
    public RequestMedicineCollectionJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EnterpriseDirectory directory, Requirement requirement) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.directory = directory;
        this.requirement = requirement;
        this.areaName = requirement.getArea();

        txtItem.setText(requirement.getItemName());
        txtRequirement.setText(String.valueOf(requirement.getRequirementCount()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtItem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRequirement = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCount = new javax.swing.JTextField();
        btnReqDonation = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtCostMeds = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        backJButton.setBackground(new java.awt.Color(0, 153, 255));
        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Item:");

        txtItem.setEditable(false);
        txtItem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Requirement:");

        txtRequirement.setEditable(false);
        txtRequirement.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Count:");

        txtCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnReqDonation.setBackground(new java.awt.Color(0, 153, 255));
        btnReqDonation.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReqDonation.setForeground(new java.awt.Color(255, 255, 255));
        btnReqDonation.setText("Suppy");
        btnReqDonation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqDonationActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Cost (in $):");

        txtCostMeds.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Supply Medicines");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCostMeds, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRequirement, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnReqDonation, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backJButton)
                    .addComponent(jLabel7))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRequirement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCostMeds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnReqDonation)
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PharmacistWorkAreaJPanel dwjp = (PharmacistWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        dwjp.populateRequirementsTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnReqDonationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqDonationActionPerformed
        String validationMsg = "";
        if (txtCostMeds.getText() == null || txtCostMeds.getText().isEmpty() || txtCostMeds.getText().trim().isEmpty()) {
            validationMsg += "Cost of medicines can't be empty.\n";
        } else {
            try {
                Double.parseDouble(txtCostMeds.getText());
                if (Double.parseDouble(txtCostMeds.getText()) <= 0) {
                    validationMsg += "Cost of medicines should be greater than 0.\n";
                    txtCostMeds.setText("");
                }
            } catch (NumberFormatException e) {
                validationMsg += "Please enter a valid amount in cost.\n";
                txtCostMeds.setText("");
            }
        }
        if (txtCount.getText() == null || txtCount.getText().isEmpty() || txtCount.getText().trim().isEmpty()) {
            validationMsg += "Count of medicines can't be empty.\n";
        } else {
            try {
                Integer.parseInt(txtCount.getText());
                if (Integer.parseInt(txtCount.getText()) <= 0) {
                    validationMsg += "Count of medicines should be greater than 0.\n";
                    txtCount.setText("");
                }
            } catch (NumberFormatException e) {
                validationMsg += "Please enter a valid number in count.\n";
                txtCount.setText("");
            }
        }

        if (!validationMsg.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please review the below error(s):\n" + validationMsg);
            return;
        }

        int itemDonatedCount = Integer.parseInt(txtCount.getText());
        String itemName = txtItem.getText();
        int requirement = Integer.parseInt(txtRequirement.getText());
        double cost = Double.parseDouble(txtCostMeds.getText());

        if (itemDonatedCount > requirement) {
            JOptionPane.showMessageDialog(null, "Please supply based on the requirements.");
            txtCount.setText("");
            txtCostMeds.setText("");
            return;
        }

        MedicineCollectionWorkRequest request = new MedicineCollectionWorkRequest();
        request.setArea(areaName);
        request.setItemName(itemName);
        request.setItemCount(itemDonatedCount);
        request.setRequestDate(new Date());
        request.setSender(userAccount);
        request.setCost(cost);
        request.setStatus("Donation req sent");

        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof HumanResource) {
                org = organization;
                break;
            }
        }

        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }

        JOptionPane.showMessageDialog(null, "Request created successfully.");
        txtRequirement.setText(String.valueOf(requirement - itemDonatedCount));
        txtCount.setText("");
        txtCostMeds.setText("");

        for (Requirement r : enterprise.getRequirementDirectory().getRequirementDirectory()) {
            if (r.getItemName().equalsIgnoreCase(itemName) && r.getArea().equalsIgnoreCase(areaName)) {
                r.setRequirementCount(requirement - itemDonatedCount);
                r.setCollectedCount(r.getCollectedCount() + itemDonatedCount);
            }
        }

    }//GEN-LAST:event_btnReqDonationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnReqDonation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtCostMeds;
    private javax.swing.JTextField txtCount;
    private javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtRequirement;
    // End of variables declaration//GEN-END:variables
}
